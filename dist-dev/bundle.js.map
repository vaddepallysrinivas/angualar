{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/app.decorators.js",
    "src/app.events.config.js",
    "src/app.interceptors.js",
    "src/app.js",
    "src/app.routing.js",
    "src/app.values.js",
    "src/common/alert-dialog.controller.js",
    "src/common/commonService.service.js",
    "src/common/http-dialog.controller.js",
    "src/common/module.js",
    "src/common/spinner.directive.js",
    "src/common/spinner.service.js",
    "src/common/yes-no-dialog.controller.js",
    "src/home/container.component.js",
    "src/home/error-dialog.controller.js",
    "src/home/login.component.js",
    "src/home/module.js"
  ],
  "names": [],
  "mappingsnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtlRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "'use strict';\r\n\r\nvar angular = require('angular');\r\n\r\nfunction decorators($provide) {\r\n    $provide.decorator('$exceptionHandler', ['$injector', '$delegate', function($injector, $delegate) {\r\n        return function(exception, cause) {\r\n            $delegate(exception, cause);\r\n            var errorData = {exception: exception, cause: cause};\r\n            var common = $injector.get('commonService');\r\n            common.broadcastErrorDialogEvent(errorData);\r\n        };\r\n    }]);\r\n    $provide.decorator('$q', ['$delegate', function($delegate) {\r\n        function seqAll(promises) {\r\n            var deferred = $delegate.defer();\r\n            var results = [];\r\n            var j = 0;\r\n            function recursive(promise) {\r\n                j++;\r\n                promise.then(function(data){\r\n                    results.push(data);\r\n                    if (j < promises.length) {\r\n                        recursive(promises[j]);\r\n                    } else {\r\n                        deferred.resolve(results);\r\n                    }\r\n                }, function(error) {\r\n                    //todo: Error data need to be made generic\r\n                    deferred.reject('promises[' + (j - 1) + ']' + ' rejected with status: ' + error.status);\r\n                    return;\r\n                });\r\n            }\r\n            recursive(promises[j]);\r\n            return deferred.promise;\r\n        }\r\n        $delegate.seqAll = seqAll;\r\n        return $delegate;\r\n    }]);\r\n    \r\n    $provide.decorator('$log', ['$delegate', function($delegate){\r\n        \r\n        var enhanceLogger = function ($log) {\r\n            var _$log = (function ($log) {\r\n                return {\r\n                    log: $log.log,\r\n                    info: $log.info,\r\n                    warn: $log.warn,\r\n                    debug: $log.debug,\r\n                    error: $log.error\r\n                };\r\n            })($log);\r\n\r\n            var prepareLogFn = function (logFn, className) {\r\n                className = className || 'Logger: ';\r\n                var enhancedLogFn = function () {\r\n                    try {\r\n                        var args = Array.prototype.slice.call(arguments);   \r\n                        args[0] = [className, args[0]].join('');\r\n                        logFn.apply(null, args);\r\n                    }\r\n                    catch(error) {\r\n                        $log.error('LogEnhancer ERROR: ' + error);\r\n                    }\r\n\r\n                };\r\n                enhancedLogFn.logs = [];\r\n                return enhancedLogFn;\r\n            };\r\n\r\n            var getInstance = function (className) {\r\n                className = (className !== undefined) ? className + ': ' : 'Logger: ';\r\n                var instance = {\r\n                    log: prepareLogFn(_$log.log, className),\r\n                    info: prepareLogFn(_$log.info, className),\r\n                    warn: prepareLogFn(_$log.warn, className),\r\n                    debug: prepareLogFn(_$log.debug, className),\r\n                    error: prepareLogFn(_$log.error, className) \r\n                };\r\n\r\n                if(angular.isDefined(angular.makeTryCatch)) {\r\n                    // Attach instance specific tryCatch() functionality...\r\n                    instance.tryCatch = angular.makeTryCatch(instance.error, instance);\r\n                }\r\n\r\n                return instance;\r\n            };\r\n\r\n            $log.getInstance = getInstance;\r\n\r\n            return $log;\r\n        };\r\n\r\n        return enhanceLogger($delegate);\r\n    }]);\r\n}\r\n\r\ndecorators.$inject = ['$provide'];\r\n\r\nmodule.exports = decorators;",
    "'use strict';\r\n\r\nvar config = require('./app.values');\r\n\r\nfunction commonConfig(commonConfigProvider) {\r\n    commonConfigProvider.config.spinnerToggleEvent = config.events.spinnerToggle;\r\n    commonConfigProvider.config.showErrorDialogEvent = config.events.showErrorDialog;\r\n    commonConfigProvider.config.activateParentControllerEvent = config.events.activateParentController;\r\n    commonConfigProvider.config.activateControllerEvent = config.events.activateController;\r\n    commonConfigProvider.config.activateControllerFailedEvent = config.events.activateControllerFailed;\r\n}\r\n\r\ncommonConfig.$inject = ['commonConfigProvider'];\r\n\r\nmodule.exports = commonConfig;",
    "'use strict';\r\n\r\nvar requestInterceptor = ['$q', '$injector', '$location', '$rootScope', '$timeout',\r\n    function($q, /*jshint unused:false*/$injector, $location, $rootScope, $timeout) {\r\n        var numOfRequests = 0;\r\n        var hide = function() {\r\n            numOfRequests--;\r\n            if (numOfRequests <= 0) {\r\n                $rootScope.$emit('spinner.toggle', {show: false});\r\n            }\r\n        };\r\n        var show = function () {\r\n            numOfRequests++;\r\n            if (numOfRequests > 0) {\r\n                $rootScope.$emit('spinner.toggle', {show: true, background: false});\r\n            }\r\n        };\r\n        if(numOfRequests === 0) {\r\n            $rootScope.$emit('spinner.toggle', {show: false});\r\n        }\r\n        var interceptorInstance = {\r\n            request: function (config) {\r\n                var commonService = $injector.get('commonService');\r\n                commonService.$log.getInstance().debug('[' + config.method + '] -> '+ config.url);\r\n                show();\r\n                return config || $q.when(config);\r\n            },\r\n            response: function (response) {\r\n                hide();\r\n                if(response.config.method === 'POST' && response.status > 200 && response.status <= 210) {\r\n                    var toastr = $injector.get('toastr');\r\n                    toastr.success('Data Saved Successfully !', 'Success', {timeOut:2000});\r\n                }\r\n                return response || $q.when(response);\r\n            },\r\n            responseError: function (rejection) {\r\n                hide();\r\n                $rootScope.$emit('spinner.toggle', {show: false});\r\n                var commonService = $injector.get('commonService');\r\n                if(rejection.config.method === 'POST') {\r\n                    var toastr = $injector.get('toastr');\r\n                    var message = '<p>Unable to save data successfully.<br/>Please contact support team immediately!</p>';\r\n                    toastr.error(message, 'Data Error', {timeOut: 0, allowHtml:true});\r\n                }\r\n                var error = rejection.data || {};\r\n                error = error.error || {};\r\n                commonService.$log.getInstance().debug(error.message);\r\n                return $q.reject(error);\r\n            }\r\n        };\r\n        return interceptorInstance;\r\n    }\r\n];\r\n\r\n\r\nfunction httpInterceptor($httpProvider) {\r\n    $httpProvider.interceptors.push(requestInterceptor);\r\n    // $httpProvider.defaults.cache = false;\r\n    \r\n}\r\n\r\nhttpInterceptor.$inject = ['$httpProvider'];\r\n\r\n\r\n\r\nmodule.exports = httpInterceptor;",
    "'use strict';\r\n\r\nvar angular = require('angular');\r\nrequire('angular-animate');\r\nrequire('angular-touch');\r\nrequire('angular-ui-bootstrap');\r\nrequire('angular-ui-router');\r\nrequire('angular-ui-grid');\r\n\r\n\r\n//Modules\r\nrequire('./common/module');\r\nrequire('./home/module');\r\n\r\n\r\n  angular.module('lms', [\r\n\t\t//3rd - party\r\n\t\t'ngAnimate',\r\n\t\t'ngTouch',\r\n\t\t'ui.bootstrap',\r\n\t\t'ui.router',\r\n\t\t'ui.grid',\r\n\t\t'ui.grid.resizeColumns',\r\n\t\t'ui.grid.autoResize',\r\n\t\t'ui.grid.edit',\r\n\t\t'ui.grid.autoResize',\r\n\t\t'ui.grid.selection',\r\n\t\t'ui.grid.pagination',\r\n\r\n\r\n\t\t//Modules\r\n\t\t'common',\r\n\t\t'home',\r\n\t\t//'admin',\r\n\t\t//'training',\r\n\t\t//'ptid',\r\n\t\t//'reports'\r\n\t\t])\r\n  .value('config', require('./app.values'))\r\n  .config(require('./app.routing'))\r\n  .config(require('./app.decorators'))\r\n  .config(require('./app.interceptors'))\r\n  .config(require('./app.events.config'))\r\n  .config(['$compileProvider', '$logProvider', function($compileProvider, $logProvider) {\r\n  \t$compileProvider.debugInfoEnabled(false);\r\n\t\t\t/*\r\n\t\t\t\tAlways $logProvider.debugEnabled(false) - This will not show any log statements in production.\r\n\t\t\t*/\r\n\t\t\t$logProvider.debugEnabled(true);\r\n\t\t}]).\r\n  config(['$httpProvider', function($httpProvider) {\r\n\t    //initialize get if not there\r\n\r\n\t    // $httpProvider.defaults.cache = false;\r\n\t    if (!$httpProvider.defaults.headers.get) {\r\n\t        $httpProvider.defaults.headers.get = {};    \r\n\t    }    \r\n\t    //disable IE ajax request caching\r\n\t    $httpProvider.defaults.headers.get['If-Modified-Since'] = 'Mon, 26 Jul 1997 05:00:00 GMT';\r\n\t    // extra\r\n\t    $httpProvider.defaults.headers.get['Cache-Control'] = 'no-cache';\r\n\t    /*jshint sub:true*/\r\n\t    $httpProvider.defaults.headers.get['Pragma'] = 'no-cache';\r\n  \r\n\t    if (!$httpProvider.defaults.headers.post) {\r\n\t        $httpProvider.defaults.headers.post = {};    \r\n\t    }    \r\n\r\n\t    $httpProvider.defaults.headers.post['If-Modified-Since'] = 'Mon, 26 Jul 1997 05:00:00 GMT';\r\n        \r\n\t    $httpProvider.defaults.headers.post['Cache-Control'] = 'no-cache';\r\n\t    /*jshint sub:true*/\r\n\t    $httpProvider.defaults.headers.post['Pragma'] = 'no-cache';\r\n\t}]);\r\n  //.factory('dataCache', require('./app.cache'))\r\n  //.constant('AppConstants', require('./app.constants'))\r\n  \r\n\r\n",
    "'use strict';\r\nvar angular = require('angular');\r\n\r\nfunction routing($stateProvider, $urlRouterProvider) {\r\n\r\n    $urlRouterProvider.otherwise('/login');\r\n    $stateProvider\r\n    .state('login', {\r\n        url: '/login',\r\n        templateUrl: 'src/home/templates/login.html',\r\n        title: 'login'\r\n    });\r\n}\r\n\r\nrouting.$inject=['$stateProvider', '$urlRouterProvider'];\r\n\r\nmodule.exports = routing;",
    "'use strict';\r\n\r\nvar events = {\r\n    showErrorDialog: 'error.dialog',\r\n    spinnerToggle: 'spinner.toggle',\r\n    activateParentController: 'activate.parent.controller',\r\n    activateController: 'activate.controller',\r\n    activateControllerFailed: 'activate.controller.failed'\r\n};\r\n\r\nvar config = {\r\n    events: events\r\n};\r\n\r\nmodule.exports = config;",
    "'use strict';\r\n\r\nfunction alertDialogController($uibModalInstance, params) {\r\n\r\n\t/*jshint validthis:true*/\r\n\tvar alertCtrl = this;\r\n\t\r\n\talertCtrl.title = params.title || 'Alert';\r\n\talertCtrl.message = params.message || 'Please Confirm !!';\r\n\talertCtrl.okTitle = params.okTitle || 'OK';\r\n\t\r\n\talertCtrl.ok = function () {\r\n        $uibModalInstance.close();\r\n    };\r\n\r\n    alertCtrl.no = function () {\r\n        $uibModalInstance.dismiss('cancel');\r\n    };\r\n}\r\n\r\nalertDialogController.$inject = ['$uibModalInstance', 'params'];\r\n\r\nmodule.exports = alertDialogController;",
    "'use strict';\r\n\r\nvar angular = require('angular');\r\n\r\nfunction commonService($rootScope, $q, $window, commonConfig, $timeout, $interval, $location, $uibModal, $log, $http, uiGridConstants) {\r\n\r\n    var apiBaseUrl = '';\r\n    var baseUrl = apiBaseUrl + '/epm/newipm/sep/api';\r\n\r\n    function $broadcast() {\r\n        return $rootScope.$broadcast.apply($rootScope, arguments);\r\n    }\r\n\r\n    function broadcastErrorDialogEvent(error) {\r\n        $broadcast(commonConfig.config.showErrorDialogEvent, error);\r\n    }\r\n    \r\n    function activateParentController(requests, controllerId) {\r\n        return $q.all(requests).then(function (/* jshint unused:false */ result) {\r\n            var data = {controllerId: controllerId};\r\n            $broadcast(commonConfig.config.activateParentControllerEvent, data);\r\n        }, function(error){\r\n           \r\n        });\r\n    }\r\n    \r\n    function activateController(requests, controllerId) {\r\n        var deferred = $q.defer();\r\n        $q.all(requests).then(function (/* jshint unused:false */ eventArgs) {\r\n            var data = {controllerId: controllerId};\r\n            $broadcast(commonConfig.config.activateControllerEvent, data);\r\n            deferred.resolve(eventArgs);\r\n        }).catch(function (reason) {\r\n            $broadcast(commonConfig.config.activateControllerFailedEvent, reason);\r\n            deferred.reject(reason);\r\n        });\r\n        return deferred.promise;\r\n    }\r\n\r\n    function yesNoDialog(title, message, yesCallback, noCallback, yesTitle, noTitle) {\r\n        var modalInstance = $uibModal.open({\r\n            templateUrl: 'src/common/templates/yes-no-dialog.html',\r\n            controller: 'YesNoDialogController',\r\n            controllerAs:'yesNoCtrl',\r\n            resolve: {\r\n                params: function() {\r\n                    return { \r\n                        title: title, \r\n                        message: message,\r\n                        yesTitle: yesTitle,\r\n                        noTitle: noTitle\r\n                    };\r\n                }\r\n            }\r\n        });\r\n\r\n        modalInstance.result.then(function() {\r\n            yesCallback();\r\n        }, function() {\r\n            noCallback();\r\n        });\r\n    }\r\n\r\n    function alertDialog(title, message, okCallback, okTitle) {\r\n        var modalInstance = $uibModal.open({\r\n            templateUrl: 'src/common/templates/alert-dialog.html',\r\n            controller: 'AlertDialogController',\r\n            controllerAs:'alertCtrl',\r\n            resolve: {\r\n                params: function() {\r\n                    return { \r\n                        title: title, \r\n                        message: message,\r\n                        okTitle: okTitle\r\n                    };\r\n                }\r\n            }\r\n        });\r\n        modalInstance.result.then(function() {\r\n            if(okCallback){\r\n                okCallback();\r\n            }\r\n        }, function() {\r\n\r\n        });\r\n    }\r\n\r\n    function httpDialog(isSuccess, message) {\r\n        //var /* jshint unused:false */ modalInstance = \r\n        $uibModal.open({\r\n            templateUrl: 'src/common/templates/http-callback.html',\r\n            controller: 'HttpDialogController',\r\n            controllerAs:'httpCtrl',\r\n            backdrop:false,\r\n            windowClass: 'center-modal',\r\n            resolve: {\r\n                params: function() {\r\n                    return { \r\n                        message: message,\r\n                        isSuccess: isSuccess\r\n                    };\r\n                }\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    function constructFileRequest(resource, data, params) {\r\n        return {\r\n            method: 'POST',\r\n            url: baseUrl + resource,\r\n            headers: { 'Content-Type': undefined },\r\n            transformRequest: function(data) {\r\n                var formData = new FormData();\r\n                var columns = Object.keys(data);\r\n                for(var i=0; i<columns.length; i++) {\r\n                    formData.append(columns[i], data[columns[i]]);\r\n                }\r\n                return formData;\r\n            },\r\n            data: data,\r\n            params:params\r\n        };\r\n    }\r\n\r\n    function processDataForChart(data) {\r\n        $log.debug('graph data',data);\r\n        var info = [];\r\n        //labels\r\n        var labels = Object.keys(data);\r\n        info.push(labels);\r\n        labels.sort();\r\n        //label data\r\n        var labelData = [];\r\n        for(var i=0; i<labels.length; i++){\r\n            labelData.push(data[labels[i]]);\r\n        }\r\n        info.push(labelData);\r\n        return info;\r\n    }\r\n\r\n    function drawBarChart(data, options, label, elementId) {\r\n        if(!data) {\r\n            return null;\r\n        }\r\n        var info = processDataForChart(data);\r\n        var context = document.getElementById(elementId).getContext('2d');\r\n        //context.clearRect(0,0, 230, 230);\r\n        var barThickness = 30;\r\n        var totalEntries = Object.keys(data).length;\r\n        if(totalEntries>=10 && totalEntries < 12) {\r\n            barThickness = 25;\r\n        }else if(totalEntries >=12 && totalEntries < 15) {\r\n            barThickness = 20;\r\n        }\r\n        else if(totalEntries > 15) {\r\n            barThickness = 10;\r\n        }\r\n        var opt = {\r\n            title:{\r\n                display:true,\r\n                text:options.titleText || 'Title',\r\n                padding:25\r\n            },\r\n            scales: {\r\n                yAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: options.yLabel || 'Y Label'\r\n                    },\r\n                    ticks: {\r\n                        beginAtZero:true\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: options.xLabel || 'X Label'\r\n                    },\r\n                    ticks: {\r\n                        beginAtZero:true\r\n\r\n                    },\r\n                    barThickness:barThickness\r\n                }]\r\n            },\r\n            legend:{\r\n                display:true,\r\n                position:'bottom',\r\n                onClick:null\r\n            },\r\n            animation: {\r\n                onComplete: function(){\r\n                    context.font = /* jshint undef:false*/Chart.helpers.fontString(Chart.defaults.global.defaultFontSize, 'normal', Chart.defaults.global.defaultFontFamily);\r\n                    context.fillStyle = this.chart.config.options.defaultFontColor;\r\n                    context.textAlign = 'center';\r\n                    context.textBaseline = 'bottom';\r\n                    this.data.datasets.forEach(function (dataset) {\r\n                        for (var i = 0; i < dataset.data.length; i++) {\r\n                            var model = dataset._meta[Object.keys(dataset._meta)[0]].data[i]._model;\r\n                            context.fillText(dataset.data[i], model.x-1, model.y - 5);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        /* jshint undef:false*/\r\n        return new Chart(context, {\r\n            type: 'bar',\r\n            data: {\r\n                labels: info[0],\r\n                datasets: [{\r\n                    label: label,\r\n                    data: info[1],\r\n                    backgroundColor: 'rgba(66,139,202,1)'\r\n                }]\r\n            },\r\n            options: opt\r\n        });\r\n\r\n    }\r\n\r\n  \r\n\r\n    function exportToExcel(data, query) {\r\n       var options = {\r\n        headers: true,\r\n        sheetid: 'users',\r\n        column: {style:{Font:{Bold:'1'}}},\r\n        rows: {1:{style:{Font:{Color:'#FF0077'}}}},\r\n        cells: {1:{1:{\r\n            style: {Font:{Color:'#00FFFF'}}\r\n        }}}\r\n    };\r\n    /* jshint ignore:start */\r\n    alasql(query, [options, data]);\r\n       \r\n        /* jshint ignore:end */\r\n    }\r\n    \r\n    var service = {\r\n        $broadcast: $broadcast,\r\n        $rootScope: $rootScope,\r\n        $q: $q,\r\n        $window: $window,\r\n        broadcastErrorDialogEvent: broadcastErrorDialogEvent,\r\n        activateParentController: activateParentController,\r\n        activateController: activateController,\r\n        $interval: $interval,\r\n        $timeout: $timeout,\r\n        $location: $location,\r\n        $uibModal: $uibModal,\r\n        $log: $log,\r\n        $http: $http,\r\n        apiBaseUrl: apiBaseUrl,\r\n        baseUrl: baseUrl,\r\n        assetBaseUrl: '/assets/',\r\n        htmlBaseUrl: '/src/',\r\n        yesNoDialog: yesNoDialog,\r\n        alertDialog: alertDialog,\r\n        httpDialog: httpDialog,\r\n        drawBarChart: drawBarChart,\r\n        constructFileRequest: constructFileRequest,\r\n        exportToExcel:exportToExcel,\r\n        uiGridConstants:uiGridConstants\r\n    };\r\n\r\n    return service;\r\n}\r\n\r\ncommonService.$inject = ['$rootScope', '$q', '$window',\r\n'commonConfig', '$timeout', '$interval', \r\n'$location', '$uibModal', '$log', '$http','uiGridConstants'];\r\n\r\nmodule.exports = commonService;",
    "'use strict';\r\n\r\nfunction httpDialogController($uibModalInstance, params) {\r\n\r\n\t/*jshint validthis:true*/\r\n\tvar dialogCtrl = this;\r\n\r\n\tdialogCtrl.successMsg = 'Data Saved Successfully !';\r\n\tdialogCtrl.failureMsg = 'Data failed to save, please try again !';\r\n\tdialogCtrl.isSuccess = params.isSuccess;\r\n\t\r\n\tif(params.isSuccess) {\r\n\t\tdialogCtrl.message = params.message || dialogCtrl.successMsg;\r\n\t\tdialogCtrl.classType = 'success';\r\n\t}else{\r\n\t\tdialogCtrl.message = params.message || dialogCtrl.failureMsg;\r\n\t\tdialogCtrl.classType = 'danger';\r\n\t}\r\n\t\r\n\tdialogCtrl.closeAlert = function() {\r\n\t\t$uibModalInstance.dismiss();\r\n\t};\r\n\r\n\tsetTimeout(function(){\r\n    \t$uibModalInstance.close();\r\n    }, 1500);\r\n}\r\n\r\nhttpDialogController.$inject = ['$uibModalInstance', 'params'];\r\n\r\nmodule.exports = httpDialogController;",
    "'use strict';\r\n\r\nvar angular = require('angular');\r\n\r\nvar common = angular.module('common', []);\r\n\r\ncommon.provider('commonConfig', [ function() {\r\n\tthis.config = {};\r\n\tthis.$get = function() {\r\n\t\treturn {\r\n\t\t\tconfig: this.config\r\n\t\t};\r\n\t};\r\n}] );\r\n\r\n//Directives\r\ncommon.directive('sepSpinner', require('./spinner.directive'));\r\n\r\n//Services\r\ncommon.factory('commonService', require('./commonService.service'));\r\ncommon.service('spinner', require('./spinner.service'));\r\n\r\n//Components\r\n\r\n//Controllers\r\ncommon.controller('YesNoDialogController', require('./yes-no-dialog.controller'));\r\ncommon.controller('AlertDialogController', require('./alert-dialog.controller'));\r\ncommon.controller('HttpDialogController', require('./http-dialog.controller'));\r\n\r\n//Filters\r\n\r\nmodule.exports = common;",
    "'use strict';\r\n\r\nfunction spinner($window) {\r\n    \r\n    function link(scope, element, attrs) {\r\n        scope.spinner = null;\r\n        scope.$watch(attrs.sepSpinner, function (options) {\r\n            options.radius = 15;\r\n            options.width = 15;\r\n            if (scope.spinner) {\r\n                scope.spinner.stop();\r\n            }\r\n            scope.spinner = new $window.Spinner(options);\r\n            scope.spinner.spin(element[0]);\r\n        }, true);\r\n    }\r\n\r\n    var directive = {\r\n        link: link,\r\n        restrict: 'A'\r\n    };\r\n    \r\n    return directive;\r\n    \r\n}\r\n\r\nspinner.$inject = ['$window'];\r\n\r\nmodule.exports = spinner;",
    "'use strict';\r\n\r\nfunction spinnerService(commonService, commonConfig) {\r\n\t\r\n\tfunction spinnerToggle(show) {\r\n        commonService.$broadcast(commonConfig.config.spinnerToggleEvent, {show: show});\r\n    }\r\n\r\n\tfunction spinnerHide() {\r\n        spinnerToggle(false);\r\n    }\r\n    \r\n    function spinnerShow() {\r\n        spinnerToggle(true);\r\n    }\r\n\r\n    return {\r\n    \tspinnerHide: spinnerHide,\r\n    \tspinnerShow: spinnerShow\r\n    };\r\n    \r\n}\r\n\r\nspinnerService.$inject = ['commonService', 'commonConfig'];\r\n\r\nmodule.exports = spinnerService;",
    "'use strict';\r\n\r\nfunction yesNoDialogController($uibModalInstance, params) {\r\n\r\n\t/*jshint validthis:true*/\r\n\tvar yesNoCtrl = this;\r\n\t\r\n\tyesNoCtrl.title = params.title || 'Confirm ?';\r\n\tyesNoCtrl.yesTitle = params.yesTitle || 'YES';\r\n\tyesNoCtrl.noTitle = params.noTitle || 'NO';\r\n\tyesNoCtrl.message = params.message || 'Please Confirm !';\r\n\r\n\tyesNoCtrl.yes = function () {\r\n        $uibModalInstance.close();\r\n    };\r\n\r\n    yesNoCtrl.no = function () {\r\n        $uibModalInstance.dismiss('cancel');\r\n    };\r\n\r\n}\r\n\r\nyesNoDialogController.$inject = ['$uibModalInstance', 'params'];\r\n\r\nmodule.exports = yesNoDialogController;",
    "'use strict';\r\n\r\nvar angular = require('angular');\r\n\r\nfunction containerController($scope, $rootScope, config, $uibModal, commonService) {\r\n    \r\n    var $log = commonService.$log.getInstance('ContainerController');\r\n\r\n    /*jshint validthis:true*/\r\n    var containerCtrl = this;\r\n    var events = config.events;\r\n    \r\n    containerCtrl.isBusy = false;\r\n    containerCtrl.showError = false;\r\n\r\n    \r\n    function activate() {\r\n        commonService.activateParentController([], 'ContainerController').then(function() {\r\n            \r\n        }, function() {\r\n\r\n        });\r\n    }\r\n\r\n    activate();\r\n    \r\n    containerCtrl.spinnerOptions = {\r\n        radius: 40,\r\n        lines: 7,\r\n        length: 0,\r\n        width: 30,\r\n        speed: 1.7,\r\n        corners: 1.0,\r\n        trail: 100,\r\n        color: '#5a91cc'\r\n    };\r\n\r\n    function toggleSpinner(on) {\r\n        if(!containerCtrl.showError) {\r\n            containerCtrl.isBusy = on;\r\n        }\r\n    }\r\n\r\n    function captureInner(error) {\r\n        var errorString = 'Error: ' + error.class + ' ' + error.data + ' ' + error.error + ' ' + error.location + '\\n';\r\n        if (error.stack) {\r\n            errorString = errorString + 'Call Stack:\\n';\r\n            for (var i = error.stack.length - 1; i >= 0; --i) {\r\n                var s = error.stack[i];\r\n                errorString = errorString + '' + i + ':' + s.error + ', place:' + s.place + ',mcode:' + s.mcode + '\\n';\r\n            }\r\n        }\r\n        if (error.inner) {\r\n            errorString = errorString + captureInner(error.inner);\r\n        }\r\n        return errorString;\r\n    }\r\n\r\n    function showError(data) {\r\n        containerCtrl.showError = true;\r\n        containerCtrl.isBusy = false;\r\n        toggleSpinner(false);\r\n        var errorMessage = '';\r\n        if (data.exception) {\r\n            var exc = data.exception;\r\n            if (exc.config) {\r\n                if (exc.status) {\r\n                    errorMessage = errorMessage + 'Command:' + exc.status + ' ' + exc.statusText + ' ' + exc.config.url + '\\n';\r\n                    if (exc.status === 500) {\r\n                        if (exc.data && exc.data.class) {\r\n                            var error = exc.data; // cache error\r\n                            errorMessage = errorMessage + captureInner(error);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // else if (data.data){\r\n        //     errorMessage = angular.toJson(data.data);\r\n        // } else {\r\n        //     errorMessage = angular.toJson(data);\r\n        // }\r\n        if (!errorMessage && (data.exception && (typeof data.exception === 'string'))) {\r\n            errorMessage = data.exception;\r\n        }\r\n        var stackTrace = data && data.exception ? data.exception.stack : '';\r\n        //if(stackTrace || errorMessage) {\r\n        //    var modalInstance = $uibModal.open({\r\n        //        templateUrl: '/src/home/templates/error-dialog.html',\r\n        //        controller: 'ErrorDialogController',\r\n        //        controllerAs:'errorDialogCtrl',\r\n        //        resolve: {\r\n        //            params: function() {\r\n        //                return { errorMessage: errorMessage, stackTrace: stackTrace };\r\n        //            }\r\n        //        }\r\n        //    });\r\n        //    modalInstance.result.then(function() {\r\n        //        containerCtrl.showError = false;\r\n        //    }, function() {\r\n        //        containerCtrl.showError = false;\r\n        //    });\r\n        //}\r\n        containerCtrl.showError = false;\r\n    }\r\n\r\n    $rootScope.$on('$stateChangeStart', function(event, toState,  /*jshint unused:false*/ toParams,  /*jshint unused:false*/ fromState,  /*jshint unused:false*/ fromParams) {\r\n        $log.debug('Route Changed from ', fromState.url,  '->',  toState.url);\r\n        if(toState.url.indexOf('/footer/') === -1 && toState.url.indexOf('training-checklist') === -1) {\r\n            toggleSpinner(true); \r\n        }\r\n    });\r\n\r\n    $rootScope.$on('$stateChangeSuccess', function(event, toState,  /*jshint unused:false*/ toParams,  /*jshint unused:false*/ fromState,  /*jshint unused:false*/ fromParams){\r\n        containerCtrl.breadcrumbs=toState.breadcrumbs;\r\n        commonService.$window.document.title = 'LMS: ' + toState.title;\r\n        \r\n    });\r\n\r\n    $rootScope.$on(events.showErrorDialog, function (event, data) {\r\n        showError(data);\r\n    });\r\n\r\n\t$rootScope.$on(events.spinnerToggle, function (event, data) {\r\n        toggleSpinner(data.show);\r\n    });\r\n\r\n    $rootScope.$on(events.activateController, function (event, data) {\r\n            $log.debug(data.controllerId + ' Controller Activated');\r\n            toggleSpinner(false);\r\n        }\r\n    );\r\n\r\n    $rootScope.$on(events.activateParentController, function (event, data) {\r\n            $log.debug(data.controllerId + 'Parent Controller Activated');\r\n            toggleSpinner(false);\r\n        }\r\n    );\r\n\r\n    $rootScope.$on(events.activateControllerFailed, function(event, data) {\r\n            toggleSpinner(false);\r\n            showError(data);\r\n            $log.debug(data.controllerId + 'Controller Activation Failed');\r\n        }\r\n    );\r\n}\r\n\r\ncontainerController.$inject = ['$scope', '$rootScope', 'config', '$uibModal', 'commonService',];\r\n\r\nmodule.exports = {\r\n    templateUrl: '/src/home/templates/container.html',\r\n    controllerAs: 'containerCtrl',\r\n    controller: containerController,\r\n    bindings: {\r\n        breadcrumb: '<'\r\n    }\r\n};",
    "'use strict';\r\n\r\nfunction errorDialogController($uibModalInstance, params) {\r\n    \r\n    /*jshint validthis:true */\r\n    var self = this;\r\n    \r\n    self.text = params.errorMessage;\r\n    \r\n    if (params.stackTrace) {\r\n        self.text = self.text + '\\n' + params.stackTrace;\r\n    }\r\n    \r\n    self.errorMessage = params.errorMessage;\r\n    self.stackTrace = params.stackTrace;\r\n    \r\n    self.cancel = function () {\r\n        $uibModalInstance.dismiss('cancel');\r\n    };\r\n}\r\n\r\nerrorDialogController.$inject = ['$uibModalInstance', 'params'];\r\n\r\nmodule.exports = errorDialogController;",
    "'use strict';\r\n\r\nfunction loginController(commonService) {\r\n    commonService.activateController([], 'loginController');\r\n}\r\n\r\nloginController.$inject = ['commonService'];\r\n\r\nmodule.exports = {\r\n    templateUrl: '/src/home/templates/login.html',\r\n    controllerAs: 'lgnCtrl',\r\n    controller: loginController\r\n};\r\n\r\n",
    "'use strict';\r\n\r\nvar angular = require('angular');\r\n\r\nvar home = angular.module('home', []);\r\n\r\nhome\r\n\r\n\t.component('appContainer', require('./container.component'))\r\n    .component('login', require('./login.component'))\r\n\r\n\r\n//controllers\r\n.controller('ErrorDialogController', require('./error-dialog.controller'));\r\n\t\r\nmodule.exports = home;"
  ]
}